type Query {
    motorcycleById(id: ID): Motorcycle
    userByInput(userInput: UserInput!): User
}

type Mutation {
    createMotorcycle(motorcycleInput: MotorcycleInput!): Motorcycle
    deleteMotorcycle(id: ID): Boolean
    createUser(userInput: UserInput!): Boolean
    deleteUser(userInput: UserInput!): Boolean
}

type Motorcycle {
    id: ID
    brand: Brand
    name: String
    engineSize: Int
}

type User {
    id: ID
    username: String
    password: String
}

input MotorcycleInput {
    brand: Brand!
    name: String!
    engineSize: Int!
}

input UserInput {
    username: String!
    password: String!
}

enum Brand {
    APRILLA, BMW, DUCATI, HARLEY_DAVIDSON, HONDA, INDIAN, KAWASAKI, KTM, ROYAL_ENFIELD, SUZUKI, TRIUMPH, YAMAHA
}